#!/usr/bin/env python
from __future__ import division
import os
import sys
import argparse
import numpy as np
import cv2

from isanaht.io import loadmov, savemov
from isanaht.mthread import parallel_map

fourcc = cv2.cv.FOURCC(*'mp4v')

if __name__ == "__main__":

    parser = argparse.ArgumentParser(description='Analyze the differences between sequential frames in a .mov file',
                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)

    parser.add_argument('infile', type=str, help='input file name')
    parser.add_argument('outfile', type=str, help='output file name')
    parser.add_argument('-c', type=int, default=1, help='rgb channel to use')
    parser.add_argument('-f', type=int, nargs=2, help='frame bounds')
    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument('--temporal', action='store_true', help='output movie with temporal derivatives')
    group.add_argument('--spatial', action='store_true', help='output movie with spatial derivatives')

    args = parser.parse_args()
    infile = args.infile
    outfile = args.outfile
    channel = args.c
    frames = args.f
    temporal = args.temporal
    spatial = args.spatial

    if frames is None:
        frames = [None,None]

    fr = slice(*frames)


    assert os.path.exists(infile), "please choose a real input file"

    if os.path.splitext(infile)[-1] == '.npy':
        data = np.load(infile)[fr,...,channel].astype(np.float16)

    elif os.path.splitext(infile)[-1] == '.mov':
        data = loadmov(infile)[fr,...,channel].astype(np.float16)

    else:
        raise IOError("input file type unrecognized")

    sys.stdout.write("loaded data. taking finite difference...")
    sys.stdout.flush()

    if temporal:
        diffdat = np.diff(data, axis=0)

    elif spatial:
        diffdat = np.array(parallel_map(np.gradient, data))
        diffdat = np.sqrt((diffdat**2).sum(1))

    sys.stdout.write("finished taking difference. saving data...")
    sys.stdout.flush()


    if os.path.splitext(outfile)[-1] == '.npy':
        np.save(outfile, diffdat)

    elif os.path.splitext(outfile)[-1] == '.mov':
        savemov(outfile, diffdat, fourcc)

    else:
        raise IOError("output file type unrecognized")

    sys.stdout.write("done.\n\n")
    sys.stdout.flush()


